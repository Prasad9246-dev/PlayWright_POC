{"name": "TEST-33175 To verify bet will attributed to the session based on the ownership.", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"arrow_drop_down\", exact=True)\n    - locator resolved to <button mat-button=\"\" disabled=\"true\" aria-haspopup=\"menu\" aria-expanded=\"false\" _ngcontent-ng-c677288090=\"\" mat-ripple-loader-disabled=\"\" mat-ripple-loader-uninitialized=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" class=\"mat-mdc-menu-trigger btn__tbl-status__icon-wrapper mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base ng-star-inserted mat-mdc-button-disabled\">…</button>\n  - attempting click action\n    2 × waiting for element to be visible, enabled and stable\n      - element is not enabled\n    - retrying click action\n    - waiting 20ms\n    2 × waiting for element to be visible, enabled and stable\n      - element is not enabled\n    - retrying click action\n      - waiting 100ms\n    58 × waiting for element to be visible, enabled and stable\n       - element is not enabled\n     - retrying click action\n       - waiting 500ms", "trace": "setup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-11/player'>\nrequest = <FixtureRequest for <Function test_33175>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33175: Bet Allocation Logic\")\n    @allure.title(\"TEST-33175 To verify bet will attributed to the session based on the ownership.\")\n    def test_33175(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n>       tbd = TableExecutionTemplate(setup, \"TEST-33175\",\"BGP_BetAllocationLogic\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33175.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nExecutionTemplates\\TableExecutionTemplate.py:31: in __init__\n    self._run_base_setup()\nExecutionTemplates\\TableExecutionTemplate.py:82: in _run_base_setup\n    self.table_actions.table_close_and_open()\nUtilites\\TableUtils\\TableActions.py:84: in table_close_and_open\n    self.table_close()\nUtilites\\TableUtils\\TableActions.py:49: in table_close\n    self.player_tab.dropdown_button().click()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15524: in click\n    self._sync(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:549: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000001B366A3FB60>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001B366BE0D60>, is_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"arrow_drop_down\", exact=True)\nE               - locator resolved to <button mat-button=\"\" disabled=\"true\" aria-haspopup=\"menu\" aria-expanded=\"false\" _ngcontent-ng-c677288090=\"\" mat-ripple-loader-disabled=\"\" mat-ripple-loader-uninitialized=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" class=\"mat-mdc-menu-trigger btn__tbl-status__icon-wrapper mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base ng-star-inserted mat-mdc-button-disabled\">…</button>\nE             - attempting click action\nE               2 × waiting for element to be visible, enabled and stable\nE                 - element is not enabled\nE               - retrying click action\nE               - waiting 20ms\nE               2 × waiting for element to be visible, enabled and stable\nE                 - element is not enabled\nE               - retrying click action\nE                 - waiting 100ms\nE               58 × waiting for element to be visible, enabled and stable\nE                  - element is not enabled\nE                - retrying click action\nE                  - waiting 500ms\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError"}, "start": 1757591996678, "stop": 1757592048554, "uuid": "4072cd0d-8332-48b6-91bb-bd0c3c67d4f0", "historyId": "7f60be8de8eb0ab7460a925aa7fa5dae", "testCaseId": "7f60be8de8eb0ab7460a925aa7fa5dae", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33175#test_33175", "labels": [{"name": "story", "value": "TEST-33175: Bet Allocation Logic"}, {"name": "feature", "value": "Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33175"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "21816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33175"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33175.py"]}