{"name": "TEST-33163 To verify the ownership of chips when player places more than one stack on a single seat", "status": "broken", "statusDetails": {"message": "TypeError: TableActions.move_chips_between_antennas() missing 1 required positional argument: 'chip_ids'", "trace": "setup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-08/player'>\nrequest = <FixtureRequest for <Function test_33163>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33163: Bet Allocation Logic\")\n    @allure.title(\"TEST-33163 To verify the ownership of chips when player places more than one stack on a single seat\")\n    def test_33163(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n        tbd = TableExecutionTemplate(setup, \"TEST-33163\",\"BGP_BetAllocationLogic\")\n        request.node.tbd = tbd\n        try:\n            table_ip = tbd.config[\"tableIP\"]\n            chips_df = tbd.chips_df\n            #Player clocked-in\n            tbd.table_actions.clock_in_player(\"Players_TAB\",\"1\", \"6013\")\n            # Process buy-ins\n            tbd.logger_utils.log(\"Processing buy-ins.\")\n            chip_id = tbd.table_actions.get_chip_ids_for_denom(chips_df,100)\n    \n            # Convert chip_id list to string\n            chip_id_str = \",\".join(chip_id)\n    \n            # Process wagers\n            tbd.logger_utils.log(\"Processing wagers.\")\n>           tbd.table_actions.move_chips_between_antennas(\"TT\", \"P1\",chip_id_str)\nE           TypeError: TableActions.move_chips_between_antennas() missing 1 required positional argument: 'chip_ids'\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33163.py:29: TypeError"}, "start": 1757305460230, "stop": 1757305566551, "uuid": "9b757f63-e90d-4c3c-a86c-e2ec3466f25f", "historyId": "53b580944f49a78e833b34249ddd5a25", "testCaseId": "53b580944f49a78e833b34249ddd5a25", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33163#test_33163", "labels": [{"name": "feature", "value": "Bet Allocation Logic"}, {"name": "story", "value": "TEST-33163: Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33163"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "22768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33163"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33163.py"]}