{"name": "TEST-33170 To verify the bet attribution when player clocked-in one seat and wager bet on shared antenna", "status": "broken", "statusDetails": {"message": "ValueError: invalid literal for int() with base 10: '100:PP'", "trace": "setup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-09/override'>, request = <FixtureRequest for <Function test_33170>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33170: Bet Allocation Logic\")\n    @allure.title(\"TEST-33170 To verify the bet attribution when player clocked-in one seat and wager bet on shared antenna\")\n    def test_33170(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n        tbd = TableExecutionTemplate(setup, \"TEST-33170\",\"BGP_BetAllocationLogic\")\n        request.node.tbd = tbd\n        try:\n            table_ip = tbd.config[\"tableIP\"]\n            chips_df = tbd.chips_df\n    \n            # Process buy-ins\n            tbd.logger_utils.log(\"Processing buy-ins.\")\n            buyin_result = tbd.buyin_processor.process_buyins(table_ip, tbd.buyin_data, chips_df)\n    \n            # Process wagers\n            tbd.logger_utils.log(\"Processing wagers.\")\n>           wager_result = tbd.wager_processor.process_wagers(table_ip, buyin_result, tbd.wager_data)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33170.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <GameSkeleton.Wager.Wager object at 0x000001B1053996A0>, table_ip = '172.41.46.23'\nbuyin_result = [{'chips_ID': ['e00540011226b083'], 'denom': '100', 'player': 'P1'}, {'chips_ID': ['e00540011226b090'], 'denom': '100', 'player': 'P2'}]\nwager_data = {'W1': {'antenna': None, 'denom': '100:PP', 'player': 'P1'}}\n\n    def process_wagers(self, table_ip, buyin_result, wager_data):\n        \"\"\"\n        For each wager, match player and denom with buyin_result,\n        then place the correct chips on the specified antenna using chipMove API.\n        Returns a list of processed wager entries.\n    \n        Author:\n            Prasad Kamble\n        \"\"\"\n        results = []\n        for wager in wager_data.values():\n            player = wager[\"player\"]\n>           wager_amount = int(wager[\"denom\"])  # e.g., 300\n                           ^^^^^^^^^^^^^^^^^^^\nE           ValueError: invalid literal for int() with base 10: '100:PP'\n\nGameSkeleton\\Wager.py:20: ValueError"}, "start": 1757411940536, "stop": 1757412030377, "uuid": "4a3ce43d-8731-47c0-82a6-6ca451e2e6e8", "historyId": "0f012d9728310de5a4b2b996e00b2871", "testCaseId": "0f012d9728310de5a4b2b996e00b2871", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33170#test_33170", "labels": [{"name": "feature", "value": "Bet Allocation Logic"}, {"name": "story", "value": "TEST-33170: Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33170"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "15780-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33170"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33170.py"]}