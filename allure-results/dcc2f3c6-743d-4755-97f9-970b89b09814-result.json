{"name": "TEST-33173 To verify the bet attribution when player clock-in on multiple seats and places bet decremently.", "status": "failed", "statusDetails": {"message": "AssertionError: Verification failed: No row found with '6001' in Player and Position 3.\nassert False", "trace": "setup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-10/override'>, request = <FixtureRequest for <Function test_33173>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33173: Bet Allocation Logic\")\n    @allure.title(\"TEST-33173 To verify the bet attribution when player clock-in on multiple seats and places bet decremently.\")\n    def test_33173(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n        tbd = TableExecutionTemplate(setup, \"TEST-33173\",\"BGP_BetAllocationLogic\")\n        request.node.tbd = tbd\n        try:\n            table_ip = tbd.config[\"tableIP\"]\n            chips_df = tbd.chips_df\n    \n            # Process buy-ins\n            tbd.logger_utils.log(\"Processing buy-ins.\")\n            buyin_result = tbd.buyin_processor.process_buyins(table_ip, tbd.buyin_data, chips_df)\n    \n            # Process wagers\n            tbd.logger_utils.log(\"Processing wagers.\")\n            wager_result = tbd.wager_processor.process_wagers(table_ip, buyin_result, tbd.wager_data)\n    \n            # Verify the dots on the Seat\n            tbd.logger_utils.log(\"Verifying the dots on the Seat.\")\n            dots_count = tbd.view_table_tab.get_dot_count()\n            print(f\"Dots count on the seat: {dots_count}\")\n            if dots_count == 2:\n                msg = \"Verification passed: 2 dots are displayed on the seat.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Pass\"\n    \n            # Draw cards and press shoe button\n            tbd.logger_utils.log(\"Drawing cards and pressing shoe.\")\n            tbd.card_processor.draw_cards_and_shoe_press(tbd.card_data, table_ip)\n    \n            # Process payouts\n            tbd.logger_utils.log(\"Processing payouts.\")\n            tbd.payout_processor.process_payouts(table_ip, tbd.payout_data, chips_df)\n            time.sleep(5)\n    \n            # Move to Games tab for verification\n            tbd.logger_utils.log(\"Navigating to Games tab for verification.\")\n            tbd.table_actions.navigate_to_tab(tbd.games_tab.games_tab_locator)\n    \n            # Step: Click the first row, first column cell in the table\n            tbd.logger_utils.log(\"Clicking the first row, first column cell in the table.\")\n            first_row_first_column = tbd.games_tab.first_row_first_column\n            first_row_first_column.click()\n            tbd.logger_utils.log(\"Clicked the first row, first column cell.\")\n            time.sleep(8)\n            # Step: Extract dynamic table into Python datatable (list of dicts)\n            tbd.logger_utils.log(\"Extracting table data into Python datatable.\")\n            print(\"Extracting table data...\")\n            table_data = tbd.games_tab.extract_nested_details_table_data()\n            tbd.logger_utils.log(f\"Extracted table data: {table_data}\")\n            print(f\"Extracted table data: {table_data}\")\n    \n            # Validate: Player column contains '6002' and Bets column contains 1500 and 200\n            tbd.logger_utils.log(\"Validating that at least one row has '6001' in Player and Position is '3'.\")\n            found_row = False\n            for row in table_data:\n                player = row.get('Player', '')\n                position = str(row.get('Position', ''))\n                if '6001' in str(player) and position == '3':\n                    found_row = True\n                    break\n            if found_row:\n                msg = \"Verification passed: Found row with '6001' in Player and Position 3.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Pass\"\n                assert True, msg\n            else:\n                msg = \"Verification failed: No row found with '6001' in Player and Position 3.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Fail\"\n>               assert False, msg\nE               AssertionError: Verification failed: No row found with '6001' in Player and Position 3.\nE               assert False\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33173.py:89: AssertionError"}, "attachments": [{"name": "Verification passed: 2 dots are displayed on the seat.", "source": "7f4397e3-885e-4ddc-b269-a37455c61e81-attachment.png", "type": "image/png"}, {"name": "Verification Message", "source": "5f2ce74e-1e05-481a-9c35-03d34772e384-attachment.txt", "type": "text/plain"}, {"name": "Verification failed: No row found with '6001' in Player and Position 3.", "source": "84b1af15-276c-45bb-93c4-b0ed534a27c1-attachment.png", "type": "image/png"}, {"name": "Verification Message", "source": "6f53ec8a-ee2b-488f-ac5b-a6db5a2b63e7-attachment.txt", "type": "text/plain"}], "start": 1757484565143, "stop": 1757484692599, "uuid": "c621b25a-c3b6-4b07-a34e-58cd266109c2", "historyId": "7fa69914a31b99f83bd5464b56b5182a", "testCaseId": "7fa69914a31b99f83bd5464b56b5182a", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33173#test_33173", "labels": [{"name": "feature", "value": "Bet Allocation Logic"}, {"name": "story", "value": "TEST-33173: Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33173"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "14120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33173"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33173.py"]}