{"name": "TEST-33168 To verify incase of mixed stack  ownership will be determined based on stack attribution logic", "status": "failed", "statusDetails": {"message": "AssertionError: Verification failed: First row Player column does not contain '6002' or Bets column does not contain 1500 and 200.\nassert False", "trace": "setup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-09/override'>, request = <FixtureRequest for <Function test_33168>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33168: Bet Allocation Logic\")\n    @allure.title(\"TEST-33168 To verify incase of mixed stack  ownership will be determined based on stack attribution logic\")\n    def test_33168(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n        tbd = TableExecutionTemplate(setup, \"TEST-33168\",\"BGP_BetAllocationLogic\")\n        request.node.tbd = tbd\n        try:\n            table_ip = tbd.config[\"tableIP\"]\n            chips_df = tbd.chips_df\n    \n            # Process buy-ins\n            tbd.logger_utils.log(\"Processing buy-ins.\")\n            buyin_result = tbd.buyin_processor.process_buyins(table_ip, tbd.buyin_data, chips_df)\n    \n            # Process wagers\n            tbd.logger_utils.log(\"Processing wagers.\")\n            wager_result = tbd.wager_processor.process_wagers(table_ip, buyin_result, tbd.wager_data)\n    \n            # Draw cards and press shoe button\n            tbd.logger_utils.log(\"Drawing cards and pressing shoe.\")\n            tbd.card_processor.draw_cards_and_shoe_press(tbd.card_data, table_ip)\n    \n            # Process payouts\n            tbd.logger_utils.log(\"Processing payouts.\")\n            tbd.payout_processor.process_payouts(table_ip, tbd.payout_data, chips_df)\n            time.sleep(5)\n    \n            # Move to Games tab for verification\n            tbd.logger_utils.log(\"Navigating to Games tab for verification.\")\n            tbd.table_actions.navigate_to_tab(tbd.games_tab.games_tab_locator)\n    \n            # Step: Click the first row, first column cell in the table\n            tbd.logger_utils.log(\"Clicking the first row, first column cell in the table.\")\n            first_row_first_column = tbd.games_tab.first_row_first_column\n            first_row_first_column.click()\n            tbd.logger_utils.log(\"Clicked the first row, first column cell.\")\n            time.sleep(8)\n            # Step: Extract dynamic table into Python datatable (list of dicts)\n            tbd.logger_utils.log(\"Extracting table data into Python datatable.\")\n            print(\"Extracting table data...\")\n            table_data = tbd.games_tab.extract_nested_details_table_data()\n            tbd.logger_utils.log(f\"Extracted table data: {table_data}\")\n    \n            # Validate: Player column contains '6002' and Bets column contains 1500 and 200\n            tbd.logger_utils.log(\"Validating that first row Player column contains '6002' and Bets column contains 1500 and 200 in any rows.\")\n            first_row_has_6002 = False\n            bets_found = set()\n            for idx, row in enumerate(table_data):\n                player = row.get('Player', '')\n                bets = row.get('Bets', '')\n                try:\n                    bet_value = int(str(bets).replace(',', ''))\n                except Exception:\n                    bet_value = None\n                if idx == 0 and '6002' in player:\n                    first_row_has_6002 = True\n                if bet_value in [1500, 200]:\n                    bets_found.add(bet_value)\n            if first_row_has_6002 and 1500 in bets_found and 200 in bets_found:\n                msg = \"Verification passed: First row Player column contains '6002' and Bets column contains 1500 and 200 in any rows.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Pass\"\n                assert True, msg\n            else:\n                msg = \"Verification failed: First row Player column does not contain '6002' or Bets column does not contain 1500 and 200.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Fail\"\n>               assert False, msg\nE               AssertionError: Verification failed: First row Player column does not contain '6002' or Bets column does not contain 1500 and 200.\nE               assert False\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33168.py:82: AssertionError"}, "attachments": [{"name": "Verification failed: First row Player column does not contain '6002' or Bets column does not contain 1500 and 200.", "source": "1d1fac0f-1fb5-4b46-9af1-ee2409e02541-attachment.png", "type": "image/png"}, {"name": "Verification Message", "source": "894357bc-e576-4ced-9e84-adf35d65f233-attachment.txt", "type": "text/plain"}], "start": 1757410126102, "stop": 1757410263986, "uuid": "03474ccc-ad53-40e0-9ac1-4f448898d77a", "historyId": "b0305c9839c7d3fc3362cd92f0bebe8f", "testCaseId": "b0305c9839c7d3fc3362cd92f0bebe8f", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33168#test_33168", "labels": [{"name": "feature", "value": "Bet Allocation Logic"}, {"name": "story", "value": "TEST-33168: Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33168"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "26728-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33168"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33168.py"]}