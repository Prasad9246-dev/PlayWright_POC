{"name": "TEST-33160 To verify the ownership of chips when player places more than one stack on a single seat", "status": "broken", "statusDetails": {"message": "KeyError: 'buildVersion'", "trace": "setup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-03/override'>\nrequest = <FixtureRequest for <Function test_33160>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33160: Bet Allocation Logic\")\n    @allure.title(\"TEST-33160 To verify the ownership of chips when player places more than one stack on a single seat\")\n    def test_33160(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n        tbd = TableExecutionTemplate(setup, \"TEST-33160\",\"BGP_BetAllocationLogic\")\n        request.node.tbd = tbd\n        try:\n            table_ip = tbd.config[\"tableIP\"]\n            chips_df = tbd.chips_df\n    \n            # Navigate to Games tab and get previous Game ID\n            tbd.table_actions.navigate_to_tab(tbd.games_tab.GAMES_TAB)\n            previous_game_id = tbd.games_tab.get_first_row_first_column_text()\n            tbd.logger_utils.log(\"Manual rating submitted for player 6001\")\n    \n            # Process buy-ins\n            tbd.logger_utils.log(\"Processing buy-ins.\")\n            buyin_result = tbd.buyin_processor.process_buyins(table_ip, tbd.buyin_data, chips_df)\n            print(\"Buy-In Results:\")\n            for entry in buyin_result:\n                print(f\"Player: {entry['player']}, Denom: {entry['denom']}, Chips ID: {entry['chips_ID']}\")\n    \n            # Process wagers\n            tbd.logger_utils.log(\"Processing wagers.\")\n            wager_result = tbd.wager_processor.process_wagers(table_ip, buyin_result, tbd.wager_data)\n            print(\"Wager Results:\")\n            for entry in wager_result:\n                print(f\"Player: {entry['player']}, Denom: {entry['denom']}, Antenna: {entry['antenna']}, Chips ID: {entry['chips_ID']}\")\n    \n            # Draw cards and press shoe button\n            tbd.logger_utils.log(\"Drawing cards and pressing shoe.\")\n            tbd.card_processor.draw_cards_and_shoe_press(tbd.card_data, table_ip)\n    \n            # Process payouts\n            tbd.logger_utils.log(\"Processing payouts.\")\n            tbd.payout_processor.process_payouts(table_ip, tbd.payout_data, chips_df)\n            time.sleep(5)\n    \n            # Verification step (optional, add if needed)\n            tbd.logger_utils.log(\"Navigating to Games tab for verification.\")\n            tbd.table_actions.navigate_to_tab(tbd.games_tab.GAMES_TAB)\n            current_game_id = tbd.games_tab.get_first_row_first_column_text()\n            tbd.logger_utils.log(f\"Current Game ID: {current_game_id}\")\n    \n            print(f\"Previous Game ID: {previous_game_id}, Current Game ID: {current_game_id}\")\n            if previous_game_id == current_game_id:\n                msg = \"Game record is not present on Games tab.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Fail\"\n                remarks = \"Rated Buyin completed, but game record is NOT displayed on Games tab.\"\n>               assert False, remarks\nE               AssertionError: Rated Buyin completed, but game record is NOT displayed on Games tab.\nE               assert False\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33160.py:62: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <Page url='https://172.41.46.23:790/tabledashboard/2025-09-03/override'>\nrequest = <FixtureRequest for <Function test_33160>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33160: Bet Allocation Logic\")\n    @allure.title(\"TEST-33160 To verify the ownership of chips when player places more than one stack on a single seat\")\n    def test_33160(setup, request):\n        status = \"Pass\"\n        remarks = \"\"\n        tbd = TableExecutionTemplate(setup, \"TEST-33160\",\"BGP_BetAllocationLogic\")\n        request.node.tbd = tbd\n        try:\n            table_ip = tbd.config[\"tableIP\"]\n            chips_df = tbd.chips_df\n    \n            # Navigate to Games tab and get previous Game ID\n            tbd.table_actions.navigate_to_tab(tbd.games_tab.GAMES_TAB)\n            previous_game_id = tbd.games_tab.get_first_row_first_column_text()\n            tbd.logger_utils.log(\"Manual rating submitted for player 6001\")\n    \n            # Process buy-ins\n            tbd.logger_utils.log(\"Processing buy-ins.\")\n            buyin_result = tbd.buyin_processor.process_buyins(table_ip, tbd.buyin_data, chips_df)\n            print(\"Buy-In Results:\")\n            for entry in buyin_result:\n                print(f\"Player: {entry['player']}, Denom: {entry['denom']}, Chips ID: {entry['chips_ID']}\")\n    \n            # Process wagers\n            tbd.logger_utils.log(\"Processing wagers.\")\n            wager_result = tbd.wager_processor.process_wagers(table_ip, buyin_result, tbd.wager_data)\n            print(\"Wager Results:\")\n            for entry in wager_result:\n                print(f\"Player: {entry['player']}, Denom: {entry['denom']}, Antenna: {entry['antenna']}, Chips ID: {entry['chips_ID']}\")\n    \n            # Draw cards and press shoe button\n            tbd.logger_utils.log(\"Drawing cards and pressing shoe.\")\n            tbd.card_processor.draw_cards_and_shoe_press(tbd.card_data, table_ip)\n    \n            # Process payouts\n            tbd.logger_utils.log(\"Processing payouts.\")\n            tbd.payout_processor.process_payouts(table_ip, tbd.payout_data, chips_df)\n            time.sleep(5)\n    \n            # Verification step (optional, add if needed)\n            tbd.logger_utils.log(\"Navigating to Games tab for verification.\")\n            tbd.table_actions.navigate_to_tab(tbd.games_tab.GAMES_TAB)\n            current_game_id = tbd.games_tab.get_first_row_first_column_text()\n            tbd.logger_utils.log(f\"Current Game ID: {current_game_id}\")\n    \n            print(f\"Previous Game ID: {previous_game_id}, Current Game ID: {current_game_id}\")\n            if previous_game_id == current_game_id:\n                msg = \"Game record is not present on Games tab.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Fail\"\n                remarks = \"Rated Buyin completed, but game record is NOT displayed on Games tab.\"\n                assert False, remarks\n            else:\n                msg = \"Game record is present on Games tab.\"\n                print(msg)\n                tbd.logger_utils.log(msg)\n                tbd.screenshot_util.attach_screenshot(name=msg)\n                tbd.screenshot_util.attach_text(msg, name=\"Verification Message\")\n                status = \"Pass\"\n                remarks = \"Rated Buyin completed and game record IS displayed on Games tab.\"\n                assert True, remarks\n    \n        except Exception as e:\n            status = \"Fail\"\n            remarks = str(e)\n            tbd.logger_utils.log(f\"Exception occurred: {remarks}\")\n            try:\n                tbd.void_game()\n            except Exception as ve:\n                print(f\"Failed to void hand in test: {ve}\")\n                tbd.logger_utils.log(f\"Failed to void hand in test: {ve}\")\n            raise\n        finally:\n            config = tbd.config\n>           BUILD_VERSION = config[\"buildVersion\"]\n                            ^^^^^^^^^^^^^^^^^^^^^^\nE           KeyError: 'buildVersion'\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33160.py:85: KeyError"}, "attachments": [{"name": "Game record is not present on Games tab.", "source": "ebcc959c-217a-44ad-a275-3cb9f2d1313e-attachment.png", "type": "image/png"}, {"name": "Verification Message", "source": "e6d210fc-1a15-47e2-b7e9-c5be6838f30c-attachment.txt", "type": "text/plain"}], "start": 1756875729709, "stop": 1756875785351, "uuid": "a91426e3-f5b4-43fa-bed3-424d13121a9a", "historyId": "4a8f29fd951f9af899a0047a0391bab5", "testCaseId": "4a8f29fd951f9af899a0047a0391bab5", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33160#test_33160", "labels": [{"name": "story", "value": "TEST-33160: Bet Allocation Logic"}, {"name": "feature", "value": "Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33160"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "24064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33160"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33160.py"]}