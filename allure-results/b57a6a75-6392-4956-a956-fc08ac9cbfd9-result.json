{"name": "TEST-33154 To verify the name of property -Attribution on stack pay order is changed", "status": "failed", "statusDetails": {"message": "AssertionError: 'Property Display chip owner' combobox not visible: failed assertion\nassert False", "trace": "setup = <Page url='https://wdts-gateway-report-aut02.wdts.local:30286/#/reports/reportSummary/ConfigurationAuditReport/detail'>\nrequest = <FixtureRequest for <Function test_33154>>\n\n    @allure.feature(\"Bet Allocation Logic\")\n    @allure.story(\"TEST-33154: Bet Allocation Logic\")\n    @allure.title(\"TEST-33154 To verify the name of property -Attribution on stack pay order is changed\")\n    def test_33154(setup,request):\n        # Initialize base test and get required data\n        ppb = PPExecutionTemplate(setup, \"TEST-33154\")\n        ppb.configuration_login.navigate_to_configuration(\"BI Application\")\n        request.node.ppb = ppb\n    \n        # Use setup (the Page object) for UI actions\n        page = setup\n    \n        # Step 1: Search for Configuration Audit Report\n        print(\"Step 1: Searching for 'Configuration Audit Report'...\")\n        page.wait_for_timeout(1000)  # Wait for UI to be ready\n        page.get_by_role(\"textbox\", name=\"Search report\").fill(\"Configuration Audit Report\")\n        page.wait_for_timeout(500)   # Small delay before pressing Enter\n        page.get_by_role(\"textbox\", name=\"Search report\").press(\"Enter\")\n        print(\"Entered search and pressed Enter for 'Configuration Audit Report'.\")\n    \n        # Step 2: Open Configuration\n        page.wait_for_timeout(1500)  # Wait for search results to load\n        page.get_by_text(\"open_in_browser Configuration\").click()\n        print(\"Clicked 'open_in_browser Configuration'.\")\n    \n        # Step 3: Click PropertyProperty\n        page.wait_for_timeout(1000)\n        page.get_by_text(\"PropertyProperty\").click()\n        print(\"Clicked 'PropertyProperty'.\")\n    \n        # Step 4: Search for 'Display chip owner on game start'\n        page.wait_for_timeout(1000)\n        page.get_by_role(\"textbox\", name=\"search...\").fill(\"Display chip owner on game start\")\n        print(\"Filled search box with 'Display chip owner on game start'.\")\n    \n        # Step 5: Assert 'Display chip owner on game' is visible\n        page.wait_for_timeout(1000)\n        display_chip_owner = page.get_by_text(\"Display chip owner on game\")\n        if display_chip_owner.is_visible():\n            print(\"Display chip owner on game is visible: successful assertion\")\n            assert True, \"Display chip owner on game is visible: successful assertion\"\n        else:\n            print(\"Display chip owner on game is not visible: failed assertion\")\n            assert False, \"Display chip owner on game is not visible: failed assertion\"\n    \n        # Step 6: Press Escape on Property Display chip owner combobox\n        print(\"Step 6: Trying to press Escape on 'Property Display chip owner' combobox...\")\n        page.wait_for_timeout(500)\n        combobox = page.get_by_role(\"combobox\", name=\"Property Display chip owner\")\n        if combobox.is_visible():\n            combobox.press(\"Escape\")\n            print(\"Pressed Escape on 'Property Display chip owner' combobox: successful assertion\")\n            assert True, \"Pressed Escape on 'Property Display chip owner' combobox: successful assertion\"\n        else:\n            print(\"'Property Display chip owner' combobox not visible: failed assertion\")\n            print(page.content())  # Debug: print HTML if not found\n>           assert False, \"'Property Display chip owner' combobox not visible: failed assertion\"\nE           AssertionError: 'Property Display chip owner' combobox not visible: failed assertion\nE           assert False\n\nTestCases\\BaccaratGamePlay\\BGP_BetAllocationLogic\\test_TEST-33158.py:62: AssertionError"}, "start": 1756797377490, "stop": 1756797410214, "uuid": "ef59cf39-e7fd-40b2-b347-a50486c08ab1", "historyId": "1d27a9570c2eeefceb31c123af06d531", "testCaseId": "1d27a9570c2eeefceb31c123af06d531", "fullName": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33158#test_33154", "labels": [{"name": "story", "value": "TEST-33154: Bet Allocation Logic"}, {"name": "feature", "value": "Bet Allocation Logic"}, {"name": "parentSuite", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic"}, {"name": "suite", "value": "test_TEST-33158"}, {"name": "host", "value": "CC-LT001020"}, {"name": "thread", "value": "18004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.BaccaratGamePlay.BGP_BetAllocationLogic.test_TEST-33158"}], "titlePath": ["TestCases", "BaccaratGamePlay", "BGP_BetAllocationLogic", "test_TEST-33158.py"]}